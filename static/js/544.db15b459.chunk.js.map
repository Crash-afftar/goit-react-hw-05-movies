{"version":3,"file":"static/js/544.db15b459.chunk.js","mappings":"qMAEaA,E,OAASC,GAAAA,IAAH,yF,SCWnB,EARgB,SAAC,GAAD,SAAGC,UAEf,SAACF,EAAD,WACE,SAAC,KAAD,CAAcG,KAAK,YAAYC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MAHxD,C,6GCFHC,EAAYN,EAAAA,GAAAA,GAAH,qIAOTO,EAAcP,EAAAA,GAAAA,GAAH,0EAyDXQ,GArDeR,EAAAA,GAAAA,GAAH,gJASLA,EAAAA,GAAAA,GAAH,oQAeOA,EAAAA,GAAAA,GAAH,kFAOKA,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,8cAsBJA,EAAAA,GAAAA,IAAH,gFAKHU,EAAcV,EAAAA,GAAAA,EAAH,mG,SC/CxB,EAtBmB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GACV,IAAQC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,YAAaC,EAAOH,EAAPG,GAC5B,OACE,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACJ,EAAD,CACEc,IAAG,0CAAqCL,GACxCM,IAAKP,KAEP,SAACN,EAAD,UAAcM,QANAE,EAUrB,KAGN,C,kHCaD,UA9Ba,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,GAAa,GAFC,UAGYG,EAAAA,EAAAA,MAHZ,gBAGNC,EAHM,EAGNA,QACRN,EAAUM,GAJI,gDAMdC,QAAQC,IAAR,MANc,yBAQdN,GAAa,GARC,4EAAH,qDAYfE,GACD,GAAE,KAGD,iCACE,0BACE,SAAC,IAAD,CAAWlB,OAAQA,OAErB,SAAC,IAAD,CAASV,QAASyB,MAGvB,C,+LChCKQ,EAAU,mCAGVC,EAAmB,sCAKZL,EAAgB,mCAAG,WAAMM,GAAN,yFACPC,EAAAA,EAAAA,IAPvB,mDAOyD,CACvDC,OAAQ,CACNC,QAASL,EACTE,KAAMA,EACNI,SAAU,KALgB,uBACtBC,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAAH,sDAYhBC,EAAgB,mCAAG,WAAOC,EAAaP,GAApB,yFACRC,EAAAA,EAAAA,IAhBD,4CAgB2B,CAC9CC,OAAQ,CACNC,QAASL,EACTU,MAAOD,EACPP,KAAMA,KALoB,uBACvBK,EADuB,EACvBA,KADuB,kBASvBA,GATuB,2CAAH,wDAahBI,EAAY,mCAAG,WAAM3B,GAAN,yFACHmB,EAAAA,EAAAA,IAAA,UAAaF,EAAmBW,OAAO5B,IAAO,CACnEoB,OAAQ,CACNC,QAASL,KAHa,uBAClBO,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZM,EAAU,mCAAG,WAAM7B,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,UAAaF,EAAmBW,OAAO5B,GAAvC,YAAsD,CAC3EoB,OAAQ,CACNC,QAASL,KAHW,uBAChBO,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVO,EAAU,mCAAG,WAAM9B,GAAN,yFACDmB,EAAAA,EAAAA,IAAA,UAAaF,EAAmBW,OAAO5B,GAAvC,YAAsD,CAC3EoB,OAAQ,CACNC,QAASL,KAHW,uBAChBO,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Loader = styled.div`\nposition: fixed;\n    top: 50%;\n    left: 50%;\nz - index: 10\n;`","import React from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { Loader } from './Loader.styled';\n\n\nconst Loading = ({ loading }) => (\n  loading && (\n    <Loader>\n      <ThreeCircles type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n    </Loader>\n  )\n);\n\nexport default Loading;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 25px;\n  list-style-type: none;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 10px;`\n\nexport const SectionTitle = styled.h1`\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\nalign-items: center;\n  color: #763337;\n  margin: 0;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  list-style: none;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 15px;\n  color: #000;\n\n  height: 100%;\n  padding-left: 40px;\n  padding-right: 40px;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n \n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #000;\n  transition: all 0.3s ease;\n  text-decoration: none;\n  \n\n  cursor: pointer;\n  transition: transform 0.65s;\n\n\n  &:hover {\n    transform: scale(1.05);\n    -webkit-box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n    -moz-box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n    box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 75;\n  border-radius: 10px;\n`;\nexport const ProductName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, ProductName, Img } from './MovieList.styled.jsx';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(movie => {\n        const { title, poster_path, id } = movie;\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt={title}\n              />\n              <ProductName>{title}</ProductName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default MoviesList","import MovieList from \"components/MovieList/MovieList\";\nimport { useEffect, useState } from 'react';\nimport Loading from \"components/Loader/Loader\";\nimport { fetchMoviesTrend } from \"services/api\";\n\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMoviesTrend();\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <MovieList movies={movies} />\n      </div>\n      <Loading loading={isLoading} />\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst API_KEY = '25510e2ecba168b3969766d5c3ce39fa';\nconst API_URL_TRENDING_MOVIE =\n  'https://api.themoviedb.org/3/trending/movie/week';\nconst API_URL_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\n\nconst API_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\n\nexport const fetchMoviesTrend = async page => {\n  const { data } = await axios.get(API_URL_TRENDING_MOVIE, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      per_page: 6,\n    },\n  });\n  return data;\n};\n\n\nexport const fetchMovieByName = async (searchQuery, page) => {\n  const {data } = await axios.get(API_URL_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};"],"names":["Loader","styled","loading","type","color","height","width","Container","CardWrapper","Img","Link","ProductName","movies","location","useLocation","map","movie","title","poster_path","id","to","state","from","src","alt","useState","setMovies","isLoading","setIsLoading","useEffect","getMovies","fetchMoviesTrend","results","console","log","API_KEY","API_URL_MOVIE_ID","page","axios","params","api_key","per_page","data","fetchMovieByName","searchQuery","query","getMovieById","String","getReviews","getCredits"],"sourceRoot":""}