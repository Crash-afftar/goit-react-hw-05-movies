{"version":3,"file":"static/js/3.3829c290.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Loader = styled.div`\nposition: fixed;\n    top: 50%;\n    left: 50%;\nz - index: 10\n;`","import React from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { Loader } from './Loader.styled';\n\n\nconst Loading = ({ loading }) => (\n  loading && (\n    <Loader>\n      <ThreeCircles type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n    </Loader>\n  )\n);\n\nexport default Loading;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieSection = styled.section`\n   padding: 10px;\n`;\n\nexport const LinkGoBack = styled(Link)`\n    margin-bottom: 30px;\n`;\n\nexport const MovieCard = styled.div`\n    display: flex;\n  outline: gray;\n`;\n\nexport const CardListItem = styled.li`\n   list-style-type: none;\n`;\n\nexport const NavLins = styled.ul`\n   display: flex;\n  flex-direction: column;\n`;\n\nexport const Poster = styled.img`\n  height: 100%;\n  width: 200px;\n`;","import { Outlet, Link, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\n// import { toast } from 'react-toastify';\nimport { getMovieById } from \"services/api\";\nimport Loading from \"components/Loader/Loader\";\nimport { MovieSection, LinkGoBack, MovieCard, Poster, NavLins } from './MoviePage.styled';\n\n// console.log(getMovieById(2))\n\nconst MoviePage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    (async function fetchData() {\n      try {\n        setIsLoading(true);\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 100);\n      }\n    })();\n  }, [movieId]);\n  return (\n    <MovieSection      \n    >\n      <LinkGoBack to={location.state?.from || '/'}>GO BACK</LinkGoBack>\n      {isLoading && (\n      <Loading/>       \n      )}\n      {movie && (\n          <MovieCard>\n              <Poster\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n            <div\n              style={{\n                width: '45%',\n              }}\n            >\n              <h2>{movie.title}</h2>\n\n              <p>{movie.overview}</p>\n\n              <p>Release Date: {movie.release_date}</p>\n\n              <p>Rating: {movie.vote_average}</p>\n\n              <div>\n                <h3>Additional information</h3>\n                <NavLins>\n                  <li>\n                    <Link to={`/movies/${movieId}/cast`}  state={{ from: location.state?.from || '/movies' }}>Cast</Link>\n                  </li>\n                  <li>\n                    <Link to={`/movies/${movieId}/reviews`}  state={{ from: location.state?.from || '/movies' }}>Reviews</Link>\n                  </li>\n                </NavLins>\n              </div>\n            </div>\n          </MovieCard>\n      )}\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieSection>\n  );\n};\n\nexport default MoviePage;","import axios from 'axios';\n\nconst API_KEY = '25510e2ecba168b3969766d5c3ce39fa';\nconst API_URL_TRENDING_MOVIE =\n  'https://api.themoviedb.org/3/trending/movie/week';\nconst API_URL_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\n\nconst API_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\n\nexport const fetchMoviesTrend = async page => {\n  const { data } = await axios.get(API_URL_TRENDING_MOVIE, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      per_page: 6,\n    },\n  });\n  return data;\n};\n\n\nexport const fetchMovieByName = async (searchQuery, page) => {\n  const {data } = await axios.get(API_URL_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};"],"names":["Loader","styled","loading","type","color","height","width","MovieSection","LinkGoBack","Link","MovieCard","NavLins","Poster","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","useEffect","getMovieById","data","console","log","setTimeout","to","state","from","src","poster_path","alt","title","style","overview","release_date","vote_average","Suspense","fallback","API_KEY","API_URL_MOVIE_ID","fetchMoviesTrend","page","axios","params","api_key","per_page","fetchMovieByName","searchQuery","query","id","String","getReviews","getCredits"],"sourceRoot":""}