{"version":3,"file":"static/js/697.96162df2.chunk.js","mappings":"qMAEaA,E,OAASC,GAAAA,IAAH,yF,SCWnB,EARgB,SAAC,GAAD,SAAGC,UAEf,SAACF,EAAD,WACE,SAAC,KAAD,CAAcG,KAAK,YAAYC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MAHxD,C,kHC+BhB,UA9BgB,WACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAbAC,EAAAA,EAAAA,YAAU,YACN,mCAAC,oGAEGD,GAAa,GAFhB,UAGsBE,EAAAA,EAAAA,IAAWR,GAHjC,OAGSS,EAHT,OAIGL,EAAWK,EAAKC,SAJnB,gDAMGC,QAAQC,IAAI,KAAIC,SANnB,yBAQGP,GAAa,GARhB,4EAAD,sDAWD,GAAE,CAACN,KAEF,gCACCK,IAAa,0BAAK,SAAC,IAAD,MAClBF,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,GAAnB,OACT,4BACI,wBAAKF,KACL,uBAAIC,MAFEC,EADD,MASpB,C,+LCjCKC,EAAU,mCAGVC,EAAmB,sCAKZC,EAAgB,mCAAG,WAAMC,GAAN,yFACPC,EAAAA,EAAAA,IAPvB,mDAOyD,CACvDC,OAAQ,CACNC,QAASN,EACTG,KAAMA,EACNI,SAAU,KALgB,uBACtBhB,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAAH,sDAYhBiB,EAAgB,mCAAG,WAAOC,EAAaN,GAApB,yFACRC,EAAAA,EAAAA,IAhBD,4CAgB2B,CAC9CC,OAAQ,CACNC,QAASN,EACTU,MAAOD,EACPN,KAAMA,KALoB,uBACvBZ,EADuB,EACvBA,KADuB,kBASvBA,GATuB,2CAAH,wDAahBoB,EAAY,mCAAG,WAAMZ,GAAN,yFACHK,EAAAA,EAAAA,IAAA,UAAaH,EAAmBW,OAAOb,IAAO,CACnEM,OAAQ,CACNC,QAASN,KAHa,uBAClBT,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZD,EAAU,mCAAG,WAAMS,GAAN,yFACDK,EAAAA,EAAAA,IAAA,UAAaH,EAAmBW,OAAOb,GAAvC,YAAsD,CAC3EM,OAAQ,CACNC,QAASN,KAHW,uBAChBT,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVsB,EAAU,mCAAG,WAAMd,GAAN,yFACDK,EAAAA,EAAAA,IAAA,UAAaH,EAAmBW,OAAOb,GAAvC,YAAsD,CAC3EM,OAAQ,CACNC,QAASN,KAHW,uBAChBT,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieReview/MovieReview.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Loader = styled.div`\nposition: fixed;\n    top: 50%;\n    left: 50%;\nz - index: 10\n;`","import React from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { Loader } from './Loader.styled';\n\n\nconst Loading = ({ loading }) => (\n  loading && (\n    <Loader>\n      <ThreeCircles type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n    </Loader>\n  )\n);\n\nexport default Loading;","import { useEffect, useState} from \"react\"\nimport { useParams} from 'react-router-dom';\nimport { getReviews } from \"services/api\";\nimport Loading from \"components/Loader/Loader\";\n\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsloading] = useState(false);\n    useEffect(() => {\n        (async function fetchData() {\n          try {\n            setIsloading(true);\n            const data = await getReviews(movieId);\n            setReviews(data.results)\n          } catch (err) {\n            console.log(err.message);\n          } finally {\n            setIsloading(false)\n          }\n        })();\n      }, [movieId]);\n    return (\n        <>\n        {isLoading && <div><Loading/></div>}\n        {reviews.map(({author, content, id}) => (\n            <div key={id}>\n                <h4>{author}</h4>\n                <p>{content}</p>\n            </div>\n        ))}\n        </>\n        \n    )\n}\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '25510e2ecba168b3969766d5c3ce39fa';\nconst API_URL_TRENDING_MOVIE =\n  'https://api.themoviedb.org/3/trending/movie/week';\nconst API_URL_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\n\nconst API_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\n\nexport const fetchMoviesTrend = async page => {\n  const { data } = await axios.get(API_URL_TRENDING_MOVIE, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      per_page: 6,\n    },\n  });\n  return data;\n};\n\n\nexport const fetchMovieByName = async (searchQuery, page) => {\n  const {data } = await axios.get(API_URL_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}\n\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};"],"names":["Loader","styled","loading","type","color","height","width","movieId","useParams","useState","reviews","setReviews","isLoading","setIsloading","useEffect","getReviews","data","results","console","log","message","map","author","content","id","API_KEY","API_URL_MOVIE_ID","fetchMoviesTrend","page","axios","params","api_key","per_page","fetchMovieByName","searchQuery","query","getMovieById","String","getCredits"],"sourceRoot":""}